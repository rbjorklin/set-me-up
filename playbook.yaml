# vim: set softtabstop=2 tabstop=2 shiftwidth=2 expandtab autoindent smartindent syntax=yaml:

- hosts: localhost
  connection: local
  gather_facts: true
  become: true
  vars_files:
  - vars.yaml
  tasks:
    - name: Ensure curl installed
      ansible.builtin.package:
        name: curl
        state: present

    - name: Check if rpmfusion configured
      ansible.builtin.command:
        cmd: rpm -q rpmfusion-free-release rpmfusion-nonfree-release
      register: rpmfusion
      ignore_errors: true

    - name: Ensure rpmfusion configured
      ansible.builtin.shell:
        cmd: |
          curl -L -s -o RPM-GPG-KEY-rpmfusion-nonfree-fedora-$(rpm -E %fedora) "http://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-$(rpm -E %fedora)"
          curl -L -s -o RPM-GPG-KEY-rpmfusion-free-fedora-$(rpm -E %fedora) "http://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-$(rpm -E %fedora)"
          rpm --import RPM-GPG-KEY-rpmfusion-free-fedora-$(rpm -E %fedora)
          rpm --import RPM-GPG-KEY-rpmfusion-nonfree-fedora-$(rpm -E %fedora)
          rm RPM-GPG-KEY-rpmfusion-*free-fedora-$(rpm -E %fedora)
          dnf install -y http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
      when: rpmfusion is failed

    - name: Ensure 1Password gpg key accepted
      ansible.builtin.command:
        cmd: rpm --import https://downloads.1password.com/linux/keys/1password.asc

    - name: Ensure 1Password repository configured
      ansible.builtin.yum_repository:
        name: 1password
        description: 1Password Stable Channel
        baseurl: https://downloads.1password.com/linux/rpm/stable/$basearch
        gpgcheck: true
        repo_gpgcheck: true
        gpgkey: https://downloads.1password.com/linux/keys/1password.asc

    - name: Ensure VSCode gpg key accepted
      ansible.builtin.command:
        cmd: rpm --import https://packages.microsoft.com/keys/microsoft.asc

    - name: Ensure VSCode repository configured
      ansible.builtin.yum_repository:
        name: VSCode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc

    - name: Ensure dnf-plugins-core installed
      ansible.builtin.command:
        cmd: dnf -y install dnf-plugins-core

    - name: Ensure Spotify repo configured
      ansible.builtin.command:
        cmd: dnf config-manager --add-repo=https://negativo17.org/repos/fedora-spotify.repo

    - name: Ensure base applications installed
      ansible.builtin.package:
        state: present
        name:
          - 1password
          - ShellCheck
          - VirtualBox
          - age
          - akmod-VirtualBox
          - alacritty
          - autoconf
          - bcc-tools # https://github.com/iovisor/bcc
          - cmake
          - code
          - ctags
          - dconf-editor
          - direnv
          - dnf-command(versionlock)
          - evolution
          - fd-find
          # https://fedoraproject.org/wiki/Firefox_Hardware_acceleration#Configure_VA-API_Video_decoding_on_AMD
          - ffmpeg-free  # Firefox HW accelerated decoding
          - fira-code-fonts
          - firefox
          - fzf
          - g++ # nvim-treesitter
          - git
          - gitk
          - gnome-screenshot
          - gnome-shell-extension-gpaste
          - gnome-tweaks
          - golang
          - golang-x-tools-gopls
          - gotags
          - gpaste
          - gpaste-ui
          # https://docs.fedoraproject.org/en-US/quick-docs/openh264/#_installation_from_fedora_cisco_openh264_repository
          - gstreamer1-plugin-openh264  # Teams openh264 support
          - hdparm
          - htop
          - inotify-tools # dune build --watch
          - jq
          - kernel-modules-extra # xpad etc.
          - krita
          - levien-inconsolata-fonts
          - libavcodec-freeworld  # Firefox HW accelerated decoding
          - libev-devel # ocaml pkg build dependency
          - libpq-devel # ocaml pkg build dependency
          - libva-utils  # Firefox HW accelerated decoding
          - libzstd  # OCaml 5.1.0
          - libzstd-devel  # OCaml 5.1.0
          - lnav  # local log analysis, similar to angle-grinder
          - mesa-va-drivers-freeworld  # Firefox HW accelerated decoding
          - mozilla-fira-mono-fonts
          - mozilla-fira-sans-fonts
          - mozilla-openh264  # Teams openh264 support
          - neovim
          - nmap
          - nodejs # coc-nvim
          - nodejs-bash-language-server
          - postgresql
          - pv
          - python3-neovim
          - python3-rstcheck
          - reptyr
          - ripgrep
          - rr
          - rsms-inter-fonts
          - spotify-client
          - sqlite # zsh-histdb
          - strace
          - sysstat # provides iostat
          - telnet
          - tesseract
          - tmux
          - unzip
          - vlc
          - vmtouch
          - yamllint
          - zip
          - zsh

    - name: Ensure dirty_bytes tuned
      ansible.builtin.copy:
        src: "files/conf/01-dirty-bytes.conf"
        dest: /etc/sysctl.d/01-dirty-bytes.conf

    - name: Ensure swappiness tuned
      ansible.builtin.copy:
        src: "files/conf/02-swappiness.conf"
        dest: /etc/sysctl.d/02-swappiness.conf

    - name: Ensure PackageKit stopped
      ansible.builtin.systemd:
        name: packagekit
        state: stopped
      ignore_errors: true

    - name: Ensure PackageKit removed
      ansible.builtin.package:
        state: absent
        name:
          - PackageKit
          - PackageKit-gstreamer-plugin
          - PackageKit-command-not-found
          - PackageKit-gtk3-module
          - PackageKit-glib

    # Dleyna leaks memory so we don't want it
    - name: Ensure Dleyna removed
      ansible.builtin.package:
        state: absent
        name:
          - dleyna-core
          - dleyna-server
          - dleyna-renderer
          - dleyna-connector-dbus

    # Having OpenSC installed continuously triggers a prompt in Firefox when using YubiKey
    # https://bugzilla.redhat.com/show_bug.cgi?id=1892137
    - name: Ensure OpenSC removed
      ansible.builtin.package:
        state: absent
        name:
          - opensc

    # https://www.freedesktop.org/software/systemd/man/vconsole.conf.html
    - name: Ensure colemak keymap configured
      ansible.builtin.copy:
        dest: /etc/vconsole.conf
        content: |
          KEYMAP="us-colemak"
          FONT="eurlatgr"

    # Previously SomeoneWhoCares
    - name: Ensure blackhole hosts file installed
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
        dest: /etc/hosts

    - name: Ensure opam installed
      ansible.builtin.get_url:
        url: https://github.com/ocaml/opam/releases/download/{{ version['opam'] }}/opam-{{ version['opam'] }}-x86_64-linux
        dest: /usr/local/bin/opam
        mode: '0755'

    - name: Ensure yq installed
      ansible.builtin.get_url:
        url: https://github.com/mikefarah/yq/releases/download/v{{ version['yq'] }}/yq_linux_amd64
        dest: /usr/local/bin/yq
        mode: '0755'

    - name: Ensure kubectl installed
      ansible.builtin.get_url:
        url: https://dl.k8s.io/release/v{{ version['kubectl'] }}/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'

    - name: Ensure clusterctl installed
      ansible.builtin.get_url:
        url: https://github.com/kubernetes-sigs/cluster-api/releases/download/v{{ version['clusterctl'] }}/clusterctl-linux-amd64
        dest: /usr/local/bin/clusterctl
        mode: '0755'

    - name: Ensure kind installed
      ansible.builtin.get_url:
        url: https://github.com/kubernetes-sigs/kind/releases/download/v{{ version['kind'] }}/kind-linux-amd64
        dest: /usr/local/bin/kind
        mode: '0755'

    - name: Ensure argocd installed
      ansible.builtin.get_url:
        url: https://github.com/argoproj/argo-cd/releases/download/v{{ version['argo'] }}/argocd-linux-amd64
        dest: /usr/local/bin/argocd
        mode: '0755'

    - name: Ensure helm installed
      ansible.builtin.unarchive:
        src: https://get.helm.sh/helm-v{{ version['helm'] }}-linux-amd64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        extra_opts:
        - --strip-components=1
        exclude:
        - LICENSE
        - README.md

    - name: Ensure ctlptl installed
      ansible.builtin.unarchive:
        src: https://github.com/tilt-dev/ctlptl/releases/download/v{{ version['ctlptl'] }}/ctlptl.{{ version['ctlptl'] }}.linux.x86_64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        exclude:
        - LICENSE
        - README.md

    - name: Ensure tilt installed
      ansible.builtin.unarchive:
        src: https://github.com/tilt-dev/tilt/releases/download/v{{ version['tilt'] }}/tilt.{{ version['tilt'] }}.linux.x86_64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        exclude:
        - LICENSE
        - README.md

    - name: Ensure kustomize installed
      ansible.builtin.unarchive:
        src: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v{{ version['kustomize'] }}/kustomize_v{{ version['kustomize'] }}_linux_amd64.tar.gz
        dest: /usr/local/bin
        remote_src: true

    - name: Ensure hcloud installed
      ansible.builtin.unarchive:
        src: https://github.com/hetznercloud/cli/releases/download/v{{ version['hcloud'] }}/hcloud-linux-amd64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        exclude:
        - LICENSE
        - README.md

    - name: Ensure kubeseal installed
      ansible.builtin.unarchive:
        src: https://github.com/bitnami-labs/sealed-secrets/releases/download/v{{ version['kubeseal'] }}/kubeseal-{{ version['kubeseal'] }}-linux-amd64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        exclude:
        - LICENSE
        - README.md

    - name: Ensure d2 installed
      ansible.builtin.unarchive:
        src: https://github.com/terrastruct/d2/releases/download/v{{ version['d2'] }}/d2-v{{ version['d2'] }}-linux-amd64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        extra_opts:
        - --strip-components=2
        include:
         - d2-v{{ version['d2'] }}/bin/d2

    - name: Ensure sops installed
      ansible.builtin.get_url:
        url: https://github.com/getsops/sops/releases/download/{{ version['sops'] }}/sops-{{ version['sops'] }}.linux.amd64
        dest: /usr/local/bin/sops
        mode: '0755'

    - name: Ensure nvim binary symlinked
      ansible.builtin.file:
        src: "/usr/bin/nvim"
        dest: "/usr/bin/vim"
        state: link

    - name: "Custom system fonts"
      block:
        - name: Ensure custom font folders exist
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
          loop:
            - "/usr/local/share/fonts/Monaspace"
            - "/usr/local/share/fonts/FiraCodeNerdFont"
        - name: Ensure Monaspace font installed
          ansible.builtin.unarchive:
            src: https://github.com/githubnext/monaspace/releases/download/v1.000/monaspace-v1.000.zip
            dest: /usr/local/share/fonts/Monaspace
            creates: /usr/local/share/fonts/Monaspace/MonaspaceArgon-Regular.otf
            remote_src: true
            include:
              - '*.ttf'
              - '*.otf'
            extra_opts:
              - -j
          # Ignore errors as path validation breaks due to '-j / junk paths'
          ignore_errors: true
        - name: Ensure Fira Code Nerd Font installed
          ansible.builtin.unarchive:
            src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/FiraCode.zip
            dest: /usr/local/share/fonts/FiraCodeNerdFont
            creates: /usr/local/share/fonts/FiraCodeNerdFont/FiraCodeNerdFontMono-Regular.ttf
            remote_src: true
            include:
              - '*.ttf'
        - name: Ensure font cache has been updated after installing new fonts
          ansible.builtin.command:
            cmd: fc-cache -v

    - name: "Run tasks as {{ user }}"
      become_user: "{{ user }}"
      block:
        - name: Download krew
          ansible.builtin.get_url:
            url: https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-linux_amd64.tar.gz
            dest: /tmp/krew-linux_amd64.tar.gz

        - name: Decompress krew
          ansible.builtin.command:
            chdir: /tmp
            cmd: tar -xzf /tmp/krew-linux_amd64.tar.gz

        - name: Install krew
          ansible.builtin.command:
            chdir: /tmp
            cmd: ./krew-linux_amd64 install krew

        - name: Install krew plugins
          environment:
            PATH: "{{ ansible_env.PWD }}:/home/{{ user }}/.krew/bin"
          ansible.builtin.shell:
            cmd: kubectl krew install ctx ns slice edit-status sort-manifests kyverno stern rbac-tool

        - name: Ensure folders exist
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
          loop:
            - "/home/{{ user }}/.config/alacritty"
            - "/home/{{ user }}/.config/containers"
            - "/home/{{ user }}/.config/sops"
            - "/home/{{ user }}/.config/sops/age"
            - "/home/{{ user }}/.tmux/resurrect"
            - "/home/{{ user }}/.histdb"

        - name: Ensure rust installed
          ansible.builtin.shell:
            cmd: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

        - name: Ensure starship installed
          ansible.builtin.shell:
            cmd: "~/.cargo/bin/cargo install --version {{ item.version}} {{ item.pkg }}"
          loop:
            - pkg: starship
              version: 1.19.0
            - pkg: stylua
              version: 0.20.0
            - pkg: ag  # angle-grinder, local log analysis
              version: 0.19.3

        - name: Ensure zsh-autosuggestions cloned
          ansible.builtin.git:
            repo: https://github.com/zsh-users/zsh-autosuggestions
            dest: "/home/{{ user }}/.zsh/zsh-autosuggestions"

        - name: Ensure zsh-histdb cloned
          ansible.builtin.git:
            repo: https://github.com/larkery/zsh-histdb
            dest: "/home/{{ user }}/.zsh/zsh-histdb"

        - name: Ensure zsh-histdb-skim cloned
          ansible.builtin.git:
            repo: https://github.com/m42e/zsh-histdb-skim
            dest: "/home/{{ user }}/.zsh/zsh-histdb-skim"

        - name: Ensure tmux-plugins/tpm cloned
          ansible.builtin.git:
            repo: https://github.com/tmux-plugins/tpm
            dest: "/home/{{ user }}/.tmux/plugins/tpm"

        - name: Ensure tmux-plugins/tmux-sensible cloned
          ansible.builtin.git:
            repo: https://github.com/tmux-plugins/tmux-sensible
            dest: "/home/{{ user }}/.tmux/plugins/tmux-sensible"

        - name: Ensure tmux-plugins/tmux-resurrect cloned
          ansible.builtin.git:
            repo: https://github.com/tmux-plugins/tmux-resurrect
            dest: "/home/{{ user }}/.tmux/plugins/tmux-resurrect"

        - name: Ensure Gnome app-switcher only applies to current workspace
          ansible.builtin.command:
            cmd: gsettings set org.gnome.shell.app-switcher current-workspace-only true

        - name: Ensure Gnome Calendar shows week
          ansible.builtin.command:
            cmd: gsettings set org.gnome.desktop.calendar show-weekdate true

        - name: Ensure Gnome screen-blank timeout is 15 min
          ansible.builtin.command:
            cmd: gsettings set org.gnome.desktop.session idle-delay 900

        - name: Ensure Gnome color-scheme is dark
          ansible.builtin.command:
            cmd: gsettings set org.gnome.desktop.interface color-scheme prefer-dark

        - name: Ensure Gnome window mode is smart to focus on new windows
          ansible.builtin.command:
            cmd: gsettings set org.gnome.desktop.wm.preferences focus-new-windows smart

        - name: Ensure Gnome window focus-mode is click to focus on new windows
          ansible.builtin.command:
            cmd: gsettings set org.gnome.desktop.wm.preferences focus-mode click

        - name: Ensure Gnome new windows spawn at the center of the screen to draw attention
          ansible.builtin.command:
            cmd: gsettings set org.gnome.mutter center-new-windows true


        # To view use:
        # gsettings get org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name
        - name: Ensure Gnome keybinding to open fzf powered launcher
          ansible.builtin.shell: |
            gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name 'Launcher'
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command 'alacritty --option 'window = { decorations = "none" }' --option 'window.dimensions = { columns = 140, lines = 40 }' --command /home/{{ user }}/.fzf-launcher/entrypoint.sh'
            gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding '<Control>space'

        #- name: Ensure Gnome fractional scaling enabled
        #  ansible.builtin.command:
        #    cmd: gsettings set org.gnome.mutter experimental-features "['scale-monitor-framebuffer']"

        - name: Ensure Gnome Variable Refresh Rate enabled
          ansible.builtin.command:
            cmd: gsettings set org.gnome.mutter experimental-features "['variable-refresh-rate']"

        - name: Copy using inline content
          ansible.builtin.copy:
            dest: "/home/{{ user }}/.local/share/applications/alacritty-tmux.desktop"
            content: |
              [Desktop Entry]
              Type=Application
              TryExec=alacritty
              Exec=alacritty -e tmux
              Icon=Alacritty
              Terminal=false
              Categories=System;TerminalEmulator;

              Name=Alacritty Tmux
              GenericName=Terminal
              Comment=A fast, cross-platform, OpenGL terminal emulator
              StartupNotify=true
              StartupWMClass=Alacritty
              Actions=New;

              [Desktop Action New]
              Name=New Terminal
              Exec=alacritty

        - name: Ensure 1Password Wayland launcher exists
          ansible.builtin.copy:
            dest: "/home/{{ user }}/.local/share/applications/1password.desktop"
            content: |
              [Desktop Entry]
              Name=1Password Wayland
              Exec=env GTK_THEME=Adwaita:dark /opt/1Password/1password --enable-features=UseOzonePlatform,WaylandWindowDecorations --ozone-platform-hint=wayland %U
              Terminal=false
              Type=Application
              Icon=1password
              StartupWMClass=1Password
              Comment=Password manager and secure wallet
              MimeType=x-scheme-handler/onepassword;x-scheme-handler/onepassword8;
              Categories=Office;

        - name: Ensure Solarized colors configured
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/seebi/dircolors-solarized/master/dircolors.ansi-dark
            dest: "/home/{{ user }}/.dircolors"
            mode: '0640'

        - name: Ensure utoprc-dark configured
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/ocaml-community/utop/master/utoprc-dark
            dest: "/home/{{ user }}/.utoprc"
            mode: '0640'

        - name: Ensure ocamlinit symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/ocamlinit"
            path: "/home/{{ user }}/.ocamlinit"
            state: link

        - name: Ensure gitconfig symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/gitconfig"
            path: "/home/{{ user }}/.gitconfig"
            state: link

        - name: Ensure zshrc symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/zshrc"
            dest: "/home/{{ user }}/.zshrc"
            state: link

        - name: Ensure nvim config symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/nvim"
            dest: "/home/{{ user }}/.config/nvim"
            state: link

        - name: Ensure launcher folder symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/fzf-launcher"
            dest: "/home/{{ user }}/.fzf-launcher"
            state: link

        - name: Ensure tmux config symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/tmux.conf"
            dest: "/home/{{ user }}/.tmux.conf"
            state: link

        - name: Ensure alacritty config symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/alacritty.toml"
            dest: "/home/{{ user }}/.config/alacritty/alacritty.toml"
            state: link

        - name: Ensure starship config symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/starship.toml"
            dest: "/home/{{ user }}/.config/starship.toml"
            state: link

        - name: Ensure tmux-resurrect session symlinked
          ansible.builtin.file:
            src: "{{ ansible_env.PWD }}/files/conf/tmux_resurrect.txt"
            dest: "/home/{{ user }}/.tmux/resurrect/last"
            state: link

        - name: Ensure colemak layout is used in GDM
          ansible.builtin.command:
            cmd: localectl set-x11-keymap us pc105 colemak

[user]
    email = robin.bjorklin@gmail.com
    name = Robin Bj√∂rklin

[includeIf "hasconfig:remote.*.url:https://*demonware.net/**"]
	path = ~/.gitconfig-demonware

[includeIf "hasconfig:remote.*.url:git@*.demonware.net:*/**"]
	path = ~/.gitconfig-demonware

[push]
    default = simple
[github]
    user = rbjorklin
[pull]
    rebase = true
[rebase]
    autosquash = true
    autoStash = true
[alias]
    co = checkout
    lg = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an %C(auto)%G?>%Creset' --abbrev-commit --date=relative
    checkoutsm = checkout --force --recurse-submodule
    pullsm = pull --recurse-submodule # try `git clean -fdx` and `git reset --hard`
    pp = pull --prune
    pusho = !git push -u origin $(git branch --show-current)
    merged = !git branch --merged | grep -Ev -e 'master|main' -e $(git branch --show-current) | xargs --no-run-if-empty git branch -d # delete merged branches locally
    diffc = diff --cached
    diffw = diff --ignore-blank-lines --ignore-all-space
    diffwc = diff --ignore-blank-lines --ignore-all-space --cached
    pick = cherry-pick -x
    addp = add --patch
    addi = add --intent-to-add
    addm = add --update # add/update already managed files only
    fixr = "!gitfixr() { git commit --fixup=$1 && git rebase -i --autosquash $1^; }; gitfixr"
    tagl = log --no-walk --tags --simplify-by-decoration --pretty='format:%cs %D'
    gh = "!grep_history() { git grep \"$1\" $(git rev-list --all) ; }; grep_history"
[core]
    autocrlf = input
[diff]
    tool = nvimdiff
    algorithm = histogram
[difftool]
    prompt = false
[merge]
    # https://www.git-scm.com/docs/git-mergetool#_backend_specific_hints
    tool = nvimdiff
    #conflictstyle = diff3 # https://git-scm.com/docs/git-merge#Documentation/git-merge.txt-mergeconflictStyle
[init]
    defaultBranch = main
[mergetool]
    prompt = false
    hideResolved = true

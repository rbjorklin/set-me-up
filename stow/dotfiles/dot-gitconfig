[user]
    email = robin.bjorklin@gmail.com
    name = Robin Bj√∂rklin

[includeIf "hasconfig:remote.*.url:https://*demonware.net/**"]
	path = ~/.gitconfig-demonware

[includeIf "hasconfig:remote.*.url:git@*.demonware.net:*/**"]
	path = ~/.gitconfig-demonware

[url "ssh://git@github.com/"]
	insteadOf = https://github.com/

[push]
    default = simple
[github]
    user = rbjorklin
[pull]
    rebase = true
[rebase]
    autosquash = true
    autoStash = true
[alias]
    co = checkout
    lg = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an %C(auto)%G?>%Creset' --abbrev-commit --date=relative
    checkoutsm = checkout --force --recurse-submodule
    pullsm = pull --recurse-submodule # try `git clean -fdx` and `git reset --hard`
    pp = pull --prune
    pusho = !git push -u origin $(git branch --show-current)
    # https://stackoverflow.com/a/78298145
    pushf = push --force-with-lease --force-if-includes
    merged = !git branch --merged | grep -Ev -e 'master|main' -e $(git branch --show-current) | xargs --no-run-if-empty git branch -d # delete merged branches locally
    dft = difftool
    diffc = diff --cached
    diffw = diff --ignore-blank-lines --ignore-all-space
    diffwc = diff --ignore-blank-lines --ignore-all-space --cached
    pick = cherry-pick -x
    addp = add --patch
    addi = add --intent-to-add
    addu = add --update # add/update already managed files only
    fixr = "!gitfixr() { git commit --fixup=$1 && git rebase -i --autosquash $1^; }; gitfixr"
    fixs = "!gitfixs() { commit=$(git log --oneline --max-count 20 | fzf --accept-nth 1) && git commit --fixup ${commit} && git rebase --interactive --autosquash ${commit}^ ; } ; gitfixs"
    tagl = log --no-walk --tags --simplify-by-decoration --pretty='format:%cs %D'
    gh = "!grep_history() { git grep \"$1\" $(git rev-list --all) ; }; grep_history"
    exists = log --all --  # takes a path as an argument at returns commits where said path exists
    oo = "!open_origin() { firefox https://$(git remote get-url origin | sed -e 's#^git@##g' -e 's#:#/#g' -e 's#\\.git##g' )/tree/$(git branch --show-current) ; }; open_origin"
    cmt = "!f() { \
        ISSUE=$(git rev-parse --abbrev-ref HEAD | grep -oE '^[a-zA-Z]+-[0-9]+'); \
        if [ -z \"$ISSUE\" ]; then \
            echo 'No ticket found in branch name.' >&2; exit 1; \
        fi; \
        git commit --trailer \"Issue: $ISSUE\" --trailer \"Tracker: Jira\" \"$@\"; \
    }; f"
[core]
    autocrlf = input
		pager = less --tabs=2
[diff]
    tool = difftastic
    algorithm = histogram
[difftool]
    prompt = false
[difftool "difftastic"]
    cmd = difft --background=light "$LOCAL" "$REMOTE"
[pager]
    difftool = true
[init]
    defaultBranch = main
[merge]
    # https://www.git-scm.com/docs/git-mergetool#_backend_specific_hints
    tool = nvim
    #conflictstyle = diff3 # https://git-scm.com/docs/git-merge#Documentation/git-merge.txt-mergeconflictStyle
[mergetool]
    prompt = false
    hideResolved = true
[mergetool "nvim"]
	cmd = "nvim -d -c \"wincmd l\" -c \"norm ]c\" \"$LOCAL\" \"$MERGED\" \"$REMOTE\""
[credential]
	helper = cache --timeout=300
[rerere]
	enabled = true
